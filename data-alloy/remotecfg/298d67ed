declare "self_monitoring_logs_macos" {

	// THIS IS A GENERATED REMOTE CONFIGURATION.
	// 
	//   * You can edit the contents and matchers for this configuration without them being overwritten.
	//   * If you delete ALL generated configurations, the latest default versions will be recreated.
	//   * This configuration requires the following environment variables to be set wherever alloy is running:
	//     * GCLOUD_RW_API_KEY: The Grafana Cloud API key with write access to Loki.
	//     * GCLOUD_FM_COLLECTOR_ID: A unique collector ID matching the remotecfg id argument value.
	//     * GCLOUD_FM_LOG_PATH: The absolute path to alloy's log file.

	// Write logs to your Grafana Cloud Loki instance.
	loki.write "grafana_cloud_loki" {
		endpoint {
			url = "https://logs-prod-012.grafana.net/loki/api/v1/push"

			basic_auth {
				username = "1014496"
				password = sys.env("GCLOUD_RW_API_KEY")
			}
		}
	}

	// Read Alloy logs from a designated path with the following additional labels:
	//   * job: "integrations/alloy" is compatible with Grafana Cloud's Alloy Health Integrations.
	//   * collector_id: The unique collector ID matching the remotecfg id argument value.
	//                   Used to match collector-specific metrics to power the 'Collector
	//                   Health' section of the Fleet Management UI.
	loki.source.file "alloy_logs" {
		targets = [
			{
				"__path__"     = sys.env("GCLOUD_FM_LOG_PATH"),
				"collector_id" = sys.env("GCLOUD_FM_COLLECTOR_ID"),
				"job"          = "integrations/alloy",
			},
		]
		forward_to = [loki.write.grafana_cloud_loki.receiver]
	}
}

self_monitoring_logs_macos "default" { }

declare "self_monitoring_metrics" {

	// THIS IS A GENERATED REMOTE CONFIGURATION.
	//
	//   * You can edit the contents and matchers for this configuration without them being overwritten.
	//   * If you delete ALL generated configurations, the latest default versions will be recreated.
	//   * This configuration requires the following environment variables to be set wherever alloy is running:
	//     * GCLOUD_RW_API_KEY: The Grafana Cloud API key with write access to Loki.
	//     * GCLOUD_FM_COLLECTOR_ID: A unique collector ID matching the remotecfg id argument value.

	// Export Alloy metrics in memory.
	prometheus.exporter.self "integrations_alloy_health" { }

	// Target Alloy metrics with the following additional labels:
	//   * job: "integrations/alloy" is compatible with Grafana Cloud's Alloy Health Integrations.
	//   * collector_id: The unique collector ID matching the remotecfg id argument value.
	//                   Used to match collector-specific metrics to power the 'Collector
	//                   Health' section of the Fleet Management UI.
	//   * instance: The hostname of the machine running Alloy.
	discovery.relabel "integrations_alloy_health" {
		targets = prometheus.exporter.self.integrations_alloy_health.targets

		rule {
			action       = "replace"
			target_label = "collector_id"
			replacement  = sys.env("GCLOUD_FM_COLLECTOR_ID")
		}

		rule {
			target_label = "instance"
			replacement  = constants.hostname
		}

		rule {
			target_label = "job"
			replacement  = "integrations/alloy"
		}
	}

	// Scrape Alloy metrics and forward them to the remote write component.
	prometheus.scrape "integrations_alloy_health" {
		targets = array.concat(
			discovery.relabel.integrations_alloy_health.output,
		)
		forward_to = [prometheus.remote_write.default.receiver]
		job_name   = "integrations/alloy"
	}

	// Write metrics to your Grafana Cloud Prometheus instance.
	prometheus.remote_write "default" {
		endpoint {
			url = "https://prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom/push"

			basic_auth {
				username = "1830421"
				password = sys.env("GCLOUD_RW_API_KEY")
			}
		}
	}
}

self_monitoring_metrics "default" { }
