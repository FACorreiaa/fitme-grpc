version: "3.9"

services:
#  app:
#    build:
#      dockerfile: Dockerfile
#      context: .
#      target: dev
#    volumes:
#      - .:/app
#  volumes:
#    - .:/opt/app/api
#    networks:
#      - fit-me
  postgres:
    env_file:
      - .env
    container_name: postgres
    hostname: ${DB_HOST}
    image: postgres:alpine
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5440:5432"
    restart: on-failure
    volumes:
      - ./.data/docker-postgres:/var/lib/postgresql/data
    networks:
      - fit-me
  redis:
    env_file:
      - .env
    container_name: redis
    hostname: redis
    image: redis:latest
    command: redis-server --port 6388
    ports:
      - "6388:6388"
    expose:
      - "6388"
    volumes:
      - ./.data/docker-redis:/var/lib/redis/data
    networks:
      - fit-me
  prometheus:
    image: cstyan/prometheus:exemplars-64206a
    network_mode: "host"
    platform: linux/amd64
    volumes:
      - ./config/prometheus.yml:/etc/prometheus.yml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      fit-me:

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.114.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./config/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"
    networks:
      fit-me:

  jaeger:
    image: jaegertracing/all-in-one:1.60
    ports:
      - "16686:16686"
    networks:
      fit-me:

#    networks:
#      - fit-me

#  otel-collector:
#    image: otel/opentelemetry-collector-contrib
#    volumes:
#      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
#    ports:
#      - "1888:1888" # pprof extension
#      - "8888:8888" # Prometheus metrics exposed by the Collector
#      - "8889:8889" # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317" # OTLP gRPC receiver
#      - "4318:4318" # OTLP http receiver
#      - "55679:55679" # zpages extension
#  app-dev:
#    env_file:
#      - .env
#    platform: linux/amd64
#    image: "fit-me-dev"
#    ports:
#      - "8000:8000"
#    logging:
#      driver: loki
#      options:
#        loki-url: http://localhost:3100/loki/api/v1/push
#    volumes:
#      - ./:/app
#
#  tempo:
#    image: grafana/tempo:0.7.0
#    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
#    ports:
#      - 8081:80
#    logging:
#      driver: loki
#      options:
#        loki-url: 'http://localhost:3100/api/prom/push'
#
#  tempo-query:
#    image: grafana/tempo-query:0.7.0
#    environment:
#      - BACKEND=tempo:80
#    volumes:
#      - ./etc/tempo-query.yaml:/etc/tempo-query.yaml
#    ports:
#      - "16686:16686"  # jaeger-ui
#    depends_on:
#      - tempo
#    logging:
#      driver: loki
#      options:
#        loki-url: 'http://localhost:3100/api/prom/push'
#
#  grafana:
#    image: grafana/grafana:7.3.x-exemplars
#    platform: linux/amd64
#    volumes:
#      - ./config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_AUTH_DISABLE_LOGIN_FORM=true
#    ports:
#      - "3000:3000"
#
#  loki:
#    image: grafana/loki:2.2.1
#    command: -config.file=/etc/loki/local-config.yaml
#    ports:
#      - "3100:3100"
#    logging:
#      driver: loki
#      options:
#        loki-url: 'http://localhost:3100/api/prom/push'
#


#  otel-collector:
#    image: otel/opentelemetry-collector:latest
#    ports:
#      - "4317:4317"    # For OTLP/gRPC receiver (traces and metrics)
#      - "4318:4318"    # For OTLP/HTTP receiver
#      - "8888:8888"    # For Prometheus metrics scraping
#    volumes:
#      - ./config/otel-config.yaml:/etc/otel-config.yaml
#    command: [ "--config", "/etc/otel-config.yaml" ]
#    networks:
#      - fit-me

networks:
  fit-me:
